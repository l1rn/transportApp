name: Backend CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./backend
    services:
      redis: 
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s
        
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-21-${{ hashFiles('backend/pom.xml') }}

      - name: Build and test
        run: mvn clean test -P test-profile
      
      - name: Test Redis connection
        run: |
          docker exec $(docker ps -q -f name=redis) redis-cli ping | grep PONG
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    services:
      redis: 
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s
    steps:
      - uses: actions/checkout@v4
        with:
          java-version: 21
          distribution: 'temurin'
      
      - name: Start Spring Boot (Background)
        run: |
          mvn spring-boot:run -Dspring-boot.run.profiles=test-profile &
          sleep 30
          
      - name: Test Health Endpoint
        run: |
          curl -s http://localhost:8080/api/health

      - name: Verify redis
        run: |
          docker exec $(docker ps -q -f name=redis) redis-cli ping | grep PONG

  automated-api-tests:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
          echo "$HOME/.postman/cli/bin" >> $GITHUB_PATH

      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      - name: Run Authentication API tests
        run: |
          postman collection run "43572409-4992a297-2320-4638-960c-d7513cfb6320" -e "43572409-1a6ea748-5deb-4ace-bf6c-ba9d68ca130a"
    
      - name: Run Routes API tests
        run: |
          postman collection run "43572409-84bf2f90-654f-43fe-b0d7-8881a65a3e21" -e "43572409-1a6ea748-5deb-4ace-bf6c-ba9d68ca130a"
      
      - name: Run User interaction API tests
        run: |
          postman collection run "43572409-565a6a34-bed0-4587-8b03-ce1d00b849b5" -e "43572409-1a6ea748-5deb-4ace-bf6c-ba9d68ca130a"


  load-test: 
    needs: deploy
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
      - name: Run k6 tests
        uses: grafana/k6-action@v0.3.0
        with:
          filename: tests/load-test-github.js

  stop:
    needs: [load-test, automated-api-tests]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
      - name: Stop Spring Boot
        run: mvn spring-boot:stop